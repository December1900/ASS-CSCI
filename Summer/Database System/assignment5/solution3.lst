> db.createCollection("task3",{"validator":{"$jsonSchema":{"bsonType":"object","required":["company-name","city","PRODUCT"],"properties":{"company-name":{"bsonType":"string","description":"required a string!"},"city":{"bsonType":"string","description":"required a string!"},"postal-code":{"bsonType":"int","minimum": 0,"maximum": 9999,"description": "required be an integer in [0,9999] !"},"PRODUCT":{"bsonType":"object","required": ["product-name","keywords"],"properties": {"product-name":{"bsonType":"string","description": "required a string!"},"keywords":{"bsonType":"array","description": "required be a array!"},"units-in-stock":{ "bsonType": "int","minimum": 0,"description": "required be an integer!"}, "unit-price": {"bsonType":"double","minimum": 0.00,"maximum": 100.00,"description":" required be of type double and must be positive!"},"keyword":{"bsonType":"double"},}}}}}})
{ "ok" : 1 }

> db.task3.insert({"company_name":"Apple","city":"U.S","PRODUCT":"iPhone"})
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 121,
		"errmsg" : "Document failed validation"
	}
})