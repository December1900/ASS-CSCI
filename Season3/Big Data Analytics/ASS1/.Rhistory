summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
km = kmeans(kmdata, 3)
km = kmeans(kmdata, 3)
km
str(km)
str(km)
table(iris$Species,km$cluster)
str(km)
km
str(km)
colors <-c("red","green","blue")
str(km)
table(iris$Species,km$cluster)
table(iris$Species,km$cluster)
library(cluster)
library(lattice)
library(graphics)
library(grid)
library(gridExtra)
raw_input = as.data.frame(iris)
kmdata_org = as.matrix(raw_input[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")])
summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
str(km)
km = kmeans(kmdata, 3)
km
str(km)
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
km
km = kmeans(kmdata, 3)
km = kmeans(kmdata, 3)
library(plyr)
#install.packages('ggplot2')
#install.packages('colorspace')
library(ggplot2)
library(cluster)
library(lattice)
library(graphics)
library(grid)
library(gridExtra)
raw_input = as.data.frame(iris)
kmdata_org = as.matrix(raw_input[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")])
summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
str(km)
table(iris$Species,km$cluster)
df = as.data.frame(kmdata[,1:4])
df$cluster = factor(km$cluster)
centers = as.data.frame(km$centers)
fig1 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig2 = ggplot(data=df, aes(x=Sepal.Length, y=Sepal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length, y=Sepal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig3 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig4 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig5 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend =  FALSE)
fig6 = ggplot(data=df, aes(x=Sepal.Width, y=Sepal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Sepal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
grid.arrange(arrangeGrob(fig1 + theme(legend.position = "none"),
fig2 + theme(legend.position = "none"),
fig3 + theme(legend.position = "none"),
fig4 + theme(legend.position = "none"),
fig5 + theme(legend.position = "none"),
fig6 + theme(legend.position = "none"),
ncol = 2))
dim(iris)
idx<-sample(1:dim(iris)[1],40)
iris3<-iris[idx,-5]
#iris3
hc<-hclust(dist(iris3),method = "ave")
plot(hc,hang=-1,labels=iris$Species[idx])
rect.hclust(hc,k=3)
groups<-cutree(hc,k=3)
idx <- sample(1:dim(iris)[1],50)
irisSp <- iris[idx,]
irisSp$Species <- NULL
hc <- hclust(dist(irisSp),method = "ave")
plot(hc, hang=-1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSp <- iris[idx,]
irisSp$Species <- NULL
hc <- hclust(dist(irisSp),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
library(plyr)
#install.packages('ggplot2')
#install.packages('colorspace')
library(ggplot2)
library(cluster)
library(lattice)
library(graphics)
library(grid)
library(gridExtra)
raw_input = as.data.frame(iris)
kmdata_org = as.matrix(raw_input[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")])
summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
str(km)
table(iris$Species,km$cluster)
df = as.data.frame(kmdata[,1:4])
df$cluster = factor(km$cluster)
centers = as.data.frame(km$centers)
fig1 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig2 = ggplot(data=df, aes(x=Sepal.Length, y=Sepal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length, y=Sepal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig3 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig4 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig5 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend =  FALSE)
fig6 = ggplot(data=df, aes(x=Sepal.Width, y=Sepal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Sepal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
grid.arrange(arrangeGrob(fig1 + theme(legend.position = "none"),
fig2 + theme(legend.position = "none"),
fig3 + theme(legend.position = "none"),
fig4 + theme(legend.position = "none"),
fig5 + theme(legend.position = "none"),
fig6 + theme(legend.position = "none"),
ncol = 2))
idx <- sample(1:dim(iris)[1],50)
irisSp <- iris[idx,]
irisSp$Species <- NULL
hc <- hclust(dist(irisSp),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
raw_input = as.data.frame(iris)
kmdata_org = as.matrix(raw_input[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")])
summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
par(xpd=TRUE)
legend(0.2,0.02,horiz=TRUE,as.vector(unique(iris$Species)),fill=colors,bty="n")
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
str(km)
table(iris$Species,km$cluster)
df = as.data.frame(kmdata[,1:4])
df$cluster = factor(km$cluster)
centers = as.data.frame(km$centers)
fig1 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig2 = ggplot(data=df, aes(x=Sepal.Length, y=Sepal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length, y=Sepal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig3 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig4 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig5 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend =  FALSE)
fig6 = ggplot(data=df, aes(x=Sepal.Width, y=Sepal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Sepal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
grid.arrange(arrangeGrob(fig1 + theme(legend.position = "none"),
fig2 + theme(legend.position = "none"),
fig3 + theme(legend.position = "none"),
fig4 + theme(legend.position = "none"),
fig5 + theme(legend.position = "none"),
fig6 + theme(legend.position = "none"),
ncol = 2))
idx <- sample(1:dim(iris)[1],50)
irisSp <- iris[idx,]
irisSp$Species <- NULL
hc <- hclust(dist(irisSp),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
n
n
n
n
n
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
(1:dim(iris)[1],50)
(1:dim(iris)[1],50)
(1:dim(iris)[1],50)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
groups <- cutree(hc, k=3)
groups <- cutree(hc, k=3)
source('~/Desktop/ASS1/task2.R', echo=TRUE)
fig4 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig5 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend =  FALSE)
fig6 = ggplot(data=df, aes(x=Sepal.Width, y=Sepal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Sepal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
grid.arrange(arrangeGrob(fig1 + theme(legend.position = "none"),
fig2 + theme(legend.position = "none"),
fig3 + theme(legend.position = "none"),
fig4 + theme(legend.position = "none"),
fig5 + theme(legend.position = "none"),
fig6 + theme(legend.position = "none"),
ncol = 2))
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],100)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
source('~/Desktop/ASS1/task2.R', echo=TRUE)
raw_input = as.data.frame(iris)
kmdata_org = as.matrix(raw_input[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width","Species")])
summary(raw_input)
colors <-c("red","green","blue")
pairs(iris[1:4],pch=21,bg=colors[unclass(iris$Species)])
par(xpd=TRUE)
legend(0.2,0.02,horiz=TRUE,as.vector(unique(iris$Species)),fill=colors,bty="n")
kmdata <- kmdata_org[,1:4]
wss <- numeric(15)
for (k in 1:15)
wss[k] <- sum(kmeans(kmdata, centers=k,nstart=25)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within Sum of Squares")
km = kmeans(kmdata, 3)
km
str(km)
table(iris$Species,km$cluster)
df = as.data.frame(kmdata[,1:4])
df$cluster = factor(km$cluster)
centers = as.data.frame(km$centers)
fig1 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig2 = ggplot(data=df, aes(x=Sepal.Length, y=Sepal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length, y=Sepal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig3 = ggplot(data=df, aes(x=Sepal.Length, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Length,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig4 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
fig5 = ggplot(data=df, aes(x=Sepal.Width, y=Petal.Width, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Petal.Width, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend =  FALSE)
fig6 = ggplot(data=df, aes(x=Sepal.Width, y=Sepal.Length, color=cluster ))+geom_point() + geom_point(data=centers,aes(x=Sepal.Width,y=Sepal.Length, color=as.factor(c(1,2,3))),size=10, alpha=.3, show.legend = FALSE)
grid.arrange(arrangeGrob(fig1 + theme(legend.position = "none"),
fig2 + theme(legend.position = "none"),
fig3 + theme(legend.position = "none"),
fig4 + theme(legend.position = "none"),
fig5 + theme(legend.position = "none"),
fig6 + theme(legend.position = "none"),
ncol = 2))
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],50)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
idx <- sample(1:dim(iris)[1],100)
irisSP <- iris[idx,]
irisSP$Species <- NULL
hc <- hclust(dist(irisSP),method = "ave")
plot(hc, hang= -1, labels = iris$Species[idx])
rect.hclust(hc, k=3)
groups <- cutree(hc, k=3)
library('arules')
library('arulesViz')
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
library('arules')
library('arulesViz')
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
library('arules')
library('arules')
library('arulesViz')
library('arules')
library('arulesViz')
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
library('arules')
library('arulesViz')
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
library(arules)
library(arulesViz)
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
library(arules)
detach("package:base", unload = TRUE)
library(base)
library(arules)
library(arulesViz)
df <- read.csv("A1_success_data.csv")
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
itemsets <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
summary(itemsets)
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.02, target="freguent itemsets"))
summary(items)
items <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.05, target="freguent itemsets"))
(Matrix)
(Matrix)
(Matrix)
library(Matrix)
library(grid)
library(arules)
library(arulesViz)
df <- read.csv("A1_success_data.csv")
itemsets <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
df <- read.csv("A1_success_data.csv")
itemsets <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
summary(itemsets)
library(Matrix)
library(grid)
library(arules)
library(arulesViz)
df <- read.csv("A1_success_data.csv")
itemsets <- apriori(df, parameter = list(minlen=1, maxlen=10, support=0.01, target="freguent itemsets"))
itemsets<- apriori(dat, parameter=list(minlen=1, support=0.02, target="frequent itemsets"))
df <- read.csv("A1_success_data.csv")
itemsets<- apriori(df, parameter=list(minlen=1, support=0.02, target="frequent itemsets"))
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.02, target="frequent itemsets"))
summary(itemsets)
library(arules)
library(arulesViz)
df <- read.csv("A1_success_data.csv")
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.02, target="frequent itemsets"))
summary(itemsets)
df <- read.csv("A1_success_data.csv")
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.01, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.02, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.05, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.01, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.02, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.05, target="frequent itemsets"))
summary(itemsets)
rules<- apriori(dat, parameter=list(support=0.001,confidence=0.6, target = "rules"))
rules<- apriori(df, parameter=list(support=0.001,confidence=0.6, target = "rules"))
plot(rules)
plot(rules@quality)
slope<- sort(round(rules@quality$lift / rules@quality$confidence, 2))
unlist(lapply(split(slope,f=slope),length))
inspect(head(sort(rules, by="lift"), 10))
inspect(head(sort(rules, by="confidence"), 10))
inspect(head(sort(rules, by="support"), 10))
confidentRules<- rules[quality(rules)$confidence > 0.9]
plot(confidentRules, method="matrix", measure=c("lift", "confidence"))
highLiftRules <- head(sort(rules, by="lift"), 5)
plot(highLiftRules, method="graph", control=list(type="items"))
test<-inspect(sort(rules, by="lift"))
test[test$rhs=="{Success=Yes}",]
test[test$rhs=="{Success=No}",]
summary(data)
model<-apriori(data,parameter=list(support=0.001,confidence=0.5,target="rule")) #process apriori algorithm
inspect(model) #show its detail
model_rhssuccess<-subset(model, (rhs %in% paste0("Success=", unique(data$Success))))
inspect(model_rhssuccess)#show its detail
data <- read.csv("A1_success_data.csv")
summary(data)
model<-apriori(data,parameter=list(support=0.001,confidence=0.5,target="rule")) #process apriori algorithm
inspect(model) #show its detail
model_rhssuccess<-subset(model, (rhs %in% paste0("Success=", unique(data$Success))))
inspect(model_rhssuccess)#show its detail
plot(model@quality)
model_visual_lift<- head(sort(model, by="lift"), 5) # find the 5 strongest rules sorted by lift
plot(model_visual_lift, method="graph") #show the 5 strongest rules in the graph.
rules<- apriori(df, parameter=list(support=0.001,confidence=0.6, target = "rules"))
plot(rules)
plot(rules@quality)
confidentRules<- rules[quality(rules)$confidence > 0.9]
plot(confidentRules, method="matrix", measure=c("lift", "confidence"))
highLiftRules <- head(sort(rules, by="lift"), 5)
plot(highLiftRules, method="graph", control=list(type="items"))
rules<- apriori(df, parameter=list(support=0.001,confidence=0.6, target = "rules"))
df <- read.csv("A1_success_data.csv")
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.01, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.02, target="frequent itemsets"))
summary(itemsets)
itemsets<- apriori(df, parameter=list(minlen=1, maxlen=10, support=0.05, target="frequent itemsets"))
summary(itemsets)
rules<- apriori(df, parameter=list(support=0.001,confidence=0.6, target = "rules"))
plot(rules)
plot(rules@quality)
slope<- sort(round(rules@quality$lift / rules@quality$confidence, 2))
unlist(lapply(split(slope,f=slope),length))
inspect(head(sort(rules, by="lift"), 10))
inspect(head(sort(rules, by="confidence"), 10))
inspect(head(sort(rules, by="support"), 10))
confidentRules<- rules[quality(rules)$confidence > 0.9]
plot(confidentRules, method="matrix", measure=c("lift", "confidence"))
highLiftRules <- head(sort(rules, by="lift"), 5)
plot(highLiftRules, method="graph", control=list(type="items"))
